---
- name: Install ASDF prerequisites
  homebrew:
    name:
      - git
      - curl
      - gpg
      - coreutils
      - gnu-tar
    state: present

- name: Set ASDF download URL based on architecture
  set_fact:
    asdf_download_url: "https://github.com/asdf-vm/asdf/releases/download/{{ asdf_version }}/asdf-{{ asdf_version }}-darwin-arm64.tar.gz"

- name: Create temporary directory for download
  file:
    path: "/tmp/asdf-download"
    state: directory
    mode: '0755'

- name: Download ASDF pre-compiled binary
  get_url:
    url: "{{ asdf_download_url }}"
    dest: "/tmp/asdf-download/asdf.tar.gz"
    mode: '0644'

- name: Create ASDF installation directory
  file:
    path: "{{ asdf_install_dir }}"
    state: directory
    mode: '0755'

- name: Extract ASDF archive
  shell: gtar -xzf /tmp/asdf-download/asdf.tar.gz -C /tmp/asdf-download
  args:
    creates: "/tmp/asdf-download/asdf"
  register: extract_result
  failed_when: extract_result.rc != 0 and 'File exists' not in extract_result.stderr

- name: Create bin directory if it doesn't exist
  file:
    path: "{{ asdf_bin_dir }}"
    state: directory
    mode: '0755'
  become: true
  when: asdf_bin_dir == '/usr/local/bin'

- name: Copy ASDF binary to PATH
  copy:
    src: "/tmp/asdf-download/asdf"
    dest: "{{ asdf_bin_dir }}/asdf"
    mode: '0755'
    remote_src: true
  become: true
  when: asdf_bin_dir == '/usr/local/bin'

- name: Copy ASDF binary to PATH (non-privileged)
  copy:
    src: "/tmp/asdf-download/asdf"
    dest: "{{ asdf_bin_dir }}/asdf"
    mode: '0755'
    remote_src: true
  when: asdf_bin_dir != '/usr/local/bin'

- name: Clean up temporary files
  file:
    path: "/tmp/asdf-download"
    state: absent

- name: Check if Zinit completions directory exists
  stat:
    path: "{{ ansible_env.HOME }}/.cache/zinit/completions"
  register: zinit_completions_dir
  changed_when: false

- name: Create Zinit completions directory
  file:
    path: "{{ ansible_env.HOME }}/.cache/zinit/completions"
    state: directory
    mode: '0755'
  when: zinit_completions_dir.stat.exists == false and asdf_shell_config | regex_search('zsh')

- name: Generate ASDF completions for Zinit
  shell: asdf completion zsh > {{ ansible_env.HOME }}/.cache/zinit/completions/_asdf
  args:
    creates: "{{ ansible_env.HOME }}/.cache/zinit/completions/_asdf"
  when: asdf_shell_config | regex_search('zsh')
